name: Upcoming Date Alert

# Run action at midnight on the 25th of each month and allow manual runs
on:
  schedule:
    - cron: '0 0 25 * *'
  workflow_dispatch:

jobs:
  check-dates:
    runs-on: ubuntu-latest
    outputs:
      files_content: ${{ steps.get-files.outputs.files_content }}
    steps:
      # Checkout code (version 4)
      - name: Checkout code
        uses: actions/checkout@v4

      # Extract content of Markdown files
      - name: Read Markdown files
        id: get-files
        run: |
          files_content=$(find content/en/docs -name '*.md' -exec cat {} +)
          echo "$files_content"  # Output the content for the subsequent step to capture
        shell: bash

      # Perform regex match
      - name: Perform regex match
        id: regex-match
        uses: kaisugi/action-regex-match@v1.0.1
        with:
          text: ${{ steps.check-dates.outputs.files_content }}  # Text content of all Markdown files
          regex: '(?i)(January|February|March|April|May|June|July|August|September|October|November|December).{0,6} [0-9]{4}'  # Regex pattern to match dates with case-insensitivity
          flags: gm  # Use 'g' flag for global matching and 'm' flag for multiline matching

      # Create issue with match result
      - name: Create issue with match result
        if: ${{ steps.regex-match.outputs.match != '' }}  # Check if there's a match
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const matches = ${{ toJson(steps.regex-match.outputs) }};
            const body = matches.match;

            const octokit = github.getOctokit(process.env.GITHUB_TOKEN);
            await octokit.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "Upcoming Dates Search: Check if Updates Are Needed",
              body: body
            });
